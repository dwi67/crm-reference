<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

	<bean id="queuedReaderDeadLetterErrorHandler" class="org.apache.camel.builder.DeadLetterChannelBuilder">
		<property name="deadLetterUri" value="direct:customerDeadLetterQueue" />
	</bean>

	<camelContext trace="false" id="crm-activemq-reader-context"
		errorHandlerRef="queuedReaderDeadLetterErrorHandler" xmlns="http://camel.apache.org/schema/blueprint">

		<route id="customerXmlFileQueuedImporter">
			<from
				uri="file:///Users/wijngaards/Desktop/demo/inbox/xmlqueued?move=imported" />
			<split streaming="true" id="xmlFileSplitter">
				<xpath>/customers/customer</xpath>
				<unmarshal>
					<jaxb contextPath="ch.adesso.crm.persistence.entities"
						prettyPrint="true" />
				</unmarshal>
				<to uri="activemq:customerToDatabaseQueue" />
				<to uri="log:xmlimportedqueued?groupInterval=10000" />
			</split>
		</route>

		<route id="customerFlatFileQueuedImporter">
			<from
				uri="file:///Users/wijngaards/Desktop/demo/inbox/txtqueued?move=imported" />
			<split streaming="true" id="flatFileSplitter">
				<tokenize token="\n" />
				<process ref="customerProcessor" />
				<to uri="activemq:customerToDatabaseQueue" />
				<to uri="log:txtimportedqueued?groupInterval=10000" />
			</split>
		</route>

		<route id="customerToDatabaseQueuedWriter">
			<from uri="activemq:customerToDatabaseQueue?concurrentConsumers=5" />
			<filter id="ageFilter">
				<simple>${body.age} > 18</simple>
				<to uri="bean:customerImporter?method=addCustomer" id="customerImporter" />
				<to uri="log:dbimportedqueue?groupInterval=10000" />
			</filter>
		</route>

		<route id="customerDeadLetterQueue">
			<from uri="direct:customerDeadLetterQueue" />
			<log message="Error handling message: ${exception}" loggingLevel="ERROR" />
		</route>

	</camelContext>

</blueprint>